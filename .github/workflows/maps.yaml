on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

name: maps

jobs:
  maps:
    name: Create datavisualizations
    runs-on:  macOS-latest

    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - uses: actions/checkout@v2

      - uses: r-lib/actions/setup-r@master

      - uses: r-lib/actions/setup-pandoc@v1
        with:
          pandoc-version: '2.11.2'

      - name: Query dependencies
        run: |
          install.packages('remotes')
          saveRDS(remotes::dev_package_deps(dependencies = TRUE), ".github/depends.Rds", version = 2)
          writeLines(sprintf("R-%i.%i", getRversion()$major, getRversion()$minor), ".github/R-version")
        shell: Rscript {0}

      - name: Restore R package cache
        if: runner.os != 'Windows'
        uses: actions/cache@v2
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-${{ hashFiles('.github/depends.Rds') }}
          restore-keys: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-

      - name: Install system dependencies
        if: runner.os == 'Linux'
        run: |
          while read -r cmd
          do
            eval sudo $cmd
          done < <(Rscript -e 'writeLines(remotes::system_requirements("ubuntu", "20.04"))')

      - name: Install dependencies
        run: |
          remotes::install_deps(dependencies = TRUE)
        shell: Rscript {0}

      - name: Build maps
        run: |
          library(targets)
          tar_make()
        shell: Rscript {0}

      - name: Upload maps
        uses: actions/upload-artifact@main
        with:
          name: maps
          path: html
  
  deploy:
    name: Deploy to GitHub Pages
    needs: maps
    if: github.ref == 'refs/heads/master'
    runs-on:  macOS-latest
    steps:
      - name: Download HTML files created by job maps
        uses: actions/download-artifact@v2
        with:
          name: maps

      - name: Push to gh-pages branch
        uses: crazy-max/ghaction-github-pages@v2
        with:
          target_branch: gh-pages
          build_dir: html
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
